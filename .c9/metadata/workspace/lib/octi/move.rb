{"filter":false,"title":"move.rb","tooltip":"/lib/octi/move.rb","undoManager":{"mark":100,"position":100,"stack":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":146,"column":11},"end":{"row":146,"column":12}},"text":"i"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":146,"column":12},"end":{"row":146,"column":13}},"text":"n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":146,"column":13},"end":{"row":146,"column":14}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":146,"column":14},"end":{"row":146,"column":15}},"text":"j"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":146,"column":15},"end":{"row":146,"column":16}},"text":"u"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":146,"column":14},"end":{"row":146,"column":16}},"text":"ju"},{"action":"insertText","range":{"start":{"row":146,"column":14},"end":{"row":146,"column":25}},"text":"jumped_pods"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":146,"column":25},"end":{"row":147,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":147,"column":0},"end":{"row":147,"column":3}},"text":"\t\t\t"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":147,"column":3},"end":{"row":147,"column":4}},"text":"e"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":147,"column":4},"end":{"row":147,"column":5}},"text":"n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":147,"column":5},"end":{"row":147,"column":6}},"text":"d"},{"action":"removeText","range":{"start":{"row":147,"column":2},"end":{"row":147,"column":3}},"text":"\t"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":147,"column":2},"end":{"row":147,"column":3}},"text":"\t"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":147,"column":3},"end":{"row":148,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":148,"column":0},"end":{"row":148,"column":3}},"text":"\t\t\t"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":147,"column":3},"end":{"row":147,"column":4}},"text":"\t"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":147,"column":4},"end":{"row":147,"column":5}},"text":"n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":147,"column":5},"end":{"row":147,"column":6}},"text":"e"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":147,"column":6},"end":{"row":147,"column":7}},"text":"w"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":147,"column":4},"end":{"row":147,"column":7}},"text":"new"},{"action":"insertText","range":{"start":{"row":147,"column":4},"end":{"row":147,"column":13}},"text":"new_array"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":147,"column":13},"end":{"row":147,"column":14}},"text":"["}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":147,"column":14},"end":{"row":147,"column":15}},"text":"c"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":147,"column":15},"end":{"row":147,"column":16}},"text":"a"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":147,"column":16},"end":{"row":147,"column":17}},"text":"p"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":147,"column":17},"end":{"row":147,"column":18}},"text":"."}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":147,"column":18},"end":{"row":147,"column":19}},"text":"x"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":147,"column":19},"end":{"row":147,"column":20}},"text":"]"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":147,"column":20},"end":{"row":147,"column":21}},"text":"["}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":147,"column":21},"end":{"row":147,"column":22}},"text":"c"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":147,"column":22},"end":{"row":147,"column":23}},"text":"a"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":147,"column":23},"end":{"row":147,"column":24}},"text":"p"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":147,"column":24},"end":{"row":147,"column":25}},"text":"."}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":147,"column":25},"end":{"row":147,"column":26}},"text":"y"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":147,"column":26},"end":{"row":147,"column":27}},"text":"]"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":147,"column":27},"end":{"row":147,"column":28}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":147,"column":28},"end":{"row":147,"column":29}},"text":"="}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":147,"column":29},"end":{"row":147,"column":30}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":147,"column":30},"end":{"row":147,"column":31}},"text":"n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":147,"column":31},"end":{"row":147,"column":32}},"text":"i"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":147,"column":32},"end":{"row":147,"column":33}},"text":"l"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":146,"column":14},"end":{"row":146,"column":15}},"text":"@"}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":141,"column":0},"end":{"row":142,"column":0}},"nl":"\n","lines":["\t\t"]},{"action":"insertText","range":{"start":{"row":144,"column":0},"end":{"row":145,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":146,"column":0},"end":{"row":146,"column":12}},"text":"<<<<<<< HEAD"},{"action":"insertText","range":{"start":{"row":146,"column":12},"end":{"row":147,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":150,"column":0},"end":{"row":150,"column":7}},"text":"======="},{"action":"insertText","range":{"start":{"row":150,"column":7},"end":{"row":151,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":151,"column":0},"end":{"row":161,"column":0}},"lines":["","\t\t\tadd_to_prong_reserve = 0","\t\t\tfor cap in jumped_pods","\t\t\t\tpod = new_array[cap.x][cap.y] ","\t\t\t\tadd_to_prong_reserve = add_to_prong_reserve + pod.prong_count","\t\t\t\tnew_array[cap.x][cap.y] = nil","\t\t\tend","\t\t\t#add to player's reserve","\t\t\t@player.set_prong_reserve(@player.prong_reserve+add_to_prong_reserve)",">>>>>>> a8a6a4e7ee3dc3780d7e614983fba7c5c3adceba"]}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":0,"column":0},"end":{"row":201,"column":0}},"nl":"\n","lines":["module Octi","\tclass Move","\t\tattr_reader :pod, :prongs, :board, :game_state, ","\t\t#attr_accessor :player","","\t\tdef initialize(origin, destination) #locations","\t\t\t@origin = origin","\t\t\t@destination = destination"," \t\tend","","\t\tdef execute_move(position)","\t\tend","","\tend","","\tclass Insert < Move","\t\tattr_reader :pod, :prongs, :inserts, :origin, :x, :y","\t\tdef initialize(pod,x,y,player)","\t\t\t@origin = pod #pod location","\t\t\t@x = x","\t\t\t@y = y","\t\t\t@player = player","\t\t\t#@new_prong_reserve = player.prong_reserve-1","\t\tend","","\t\tdef execute_move(position)","\t\t\tcount = @player.prong_reserve-1","\t\t\t","\t\t\tindex = @player.index","\t\t\t#puts \"player: #{@player.inspect}\"","\t\t\tif index == position.comp.index","\t\t\t\tnew_comp = Player.new(index, count)","\t\t\t\tnew_human = position.human","\t\t\t\tnew_comp.set_opponent_bases(position.comp.opponent_bases)","\t\t\telsif index == position.human.index","\t\t\t\tnew_comp = position.comp","\t\t\t\tnew_human = Player.new(index, count)","\t\t\t\tnew_human.set_opponent_bases(position.human.opponent_bases)","\t\t\telse","\t\t\t\tputs \"ERROR\".colorize(:yellow)","\t\t\tend","","\t\t\t#New pod array ","\t\t\t#new_array = position.pods.dup#DeepClone.clone position.pods","\t\t\tnew_array = two_array_copy(position.pods)","\t\t","\t\t\tpod = new_array[@origin.x][@origin.y]","\t\t\tnew_prongs = two_array_copy(pod.prongs)","","\t\t\tnew_prongs[@x][@y] = true ","\t\t\t#freeze","\t\t\ttwo_array_freeze(new_prongs)","\t\t\tnew_pod = Pod.new(@player)","\t\t\tnew_pod.set_prongs(new_prongs)","\t\t\tnew_array[@origin.x][@origin.y] = new_pod","\t\t\ttwo_array_freeze(new_array)","","\t\t\tnew_pos = Position.new(new_array, new_comp, new_human)","","\t\t\treturn new_pos\t\t\t\t\t","\t\tend","","\tend","","\tclass Hop < Move","\t\tattr_reader :pod, :prongs, :board, :origin, :destination, :player","\t\tdef initialize(origin, destination,player)","\t\t\t@origin = origin","\t\t\t@destination = destination","\t\t\t@player = player","\t\tend","","\t\tdef execute_move(position)","\t\t\tindex = @player.index","\t\t\tcount = @player.prong_reserve","\t\t\tif index == position.comp.index","\t\t\t\tnew_comp = Player.new(index, count)","\t\t\t\tnew_human = position.human","\t\t\t\tnew_comp.set_opponent_bases(position.comp.opponent_bases)","\t\t\telsif index == position.human.index","\t\t\t\tnew_comp = position.comp","\t\t\t\tnew_human = Player.new(index, count)","\t\t\t\tnew_human.set_opponent_bases(position.human.opponent_bases)","\t\t\telse","\t\t\t\tputs \"ERROR\".colorize(:yellow)","\t\t\tend","","\t\t\t#New pod array ","\t\t\t#new_array = position.pods.dup#DeepClone.clone position.pods","\t\t\tnew_array = two_array_copy(position.pods)","\t\t\tpod = new_array[@origin.x][@origin.y]","\t\t\tnew_prongs = two_array_copy(pod.prongs)","\t\t","\t\t\t#freeze pod","\t\t\tnew_pod = Pod.new(@player)","\t\t\tnew_array[@destination.x][@destination.y] = new_pod","\t\t\tnew_array[@origin.x][@origin.y] = nil","\t\t\ttwo_array_freeze(new_array)","","\t\t\t#freeze prongs","\t\t\ttwo_array_freeze(new_prongs)","\t\t\tnew_pod.set_prongs(new_prongs)","","\t\t\tnew_pos = Position.new(new_array, new_comp, new_human)","","\t\t\treturn new_pos","\t\tend\t","\tend","","\tclass Jump < Move","\t\tattr_reader :pod, :prongs, :board, :origin, :destination, :player, :jumped_pods","\t\tdef initialize(origin, destination, jumped_pods, player)","\t\t\t@origin = origin","\t\t\t@destination = destination","\t\t\t@jumped_pods = jumped_pods # locations of pods jumped in board position ","\t\t\t@player = player","\t\tend","\t\tdef set_captures(pods)","\t\t\t@jumped_pods = pods","\t\tend","\t\tdef execute_move(position)","\t\t\tindex = @player.index","","\t\t\tcount = @player.prong_reserve","\t\t\tif index == position.comp.index","\t\t\t\tnew_comp = Player.new(index, count)","\t\t\t\tnew_human = position.human","\t\t\t\tnew_comp.set_opponent_bases(position.comp.opponent_bases)","\t\t\telsif index == position.human.index","\t\t\t\tnew_comp = position.comp","\t\t\t\tnew_human = Player.new(index, count)","\t\t\t\tnew_human.set_opponent_bases(position.human.opponent_bases)","\t\t\telse","\t\t\t\tputs \"ERROR\".colorize(:yellow)","\t\t\tend","","\t\t\t#New pod array ","\t\t\t#new_array = position.pods.dup#DeepClone.clone position.pods","\t\t\tnew_array = two_array_copy(position.pods)","\t\t\tpod = new_array[@origin.x][@origin.y]","\t\t\tnew_prongs = two_array_copy(pod.prongs)","\t\t\t#freeze pod","\t\t\tnew_pod = Pod.new(@player)","\t\t\tnew_array[@destination.x][@destination.y] = new_pod","","\t\t\tnew_array[@origin.x][@origin.y] = nil","<<<<<<< HEAD","\t\t\tfor cap in @jumped_pods","\t\t\t\tnew_array[cap.x][cap.y] = nil","\t\t\tend","=======","","\t\t\tadd_to_prong_reserve = 0","\t\t\tfor cap in jumped_pods","\t\t\t\tpod = new_array[cap.x][cap.y] ","\t\t\t\tadd_to_prong_reserve = add_to_prong_reserve + pod.prong_count","\t\t\t\tnew_array[cap.x][cap.y] = nil","\t\t\tend","\t\t\t#add to player's reserve","\t\t\t@player.set_prong_reserve(@player.prong_reserve+add_to_prong_reserve)",">>>>>>> a8a6a4e7ee3dc3780d7e614983fba7c5c3adceba","\t\t\ttwo_array_freeze(new_array)","","\t\t\t#freeze prongs","\t\t\ttwo_array_freeze(new_prongs)","\t\t\tnew_pod.set_prongs(new_prongs)","","\t\t\tnew_pos = Position.new(new_array, new_comp, new_human)","\t\t\t#start = @origin","\t\t\t#new_array = position.pods.dup#DeepClone.clone position.pods","\t\t\t#new_array[@destination.x][@destination.y] = new_array[@origin.x][@origin.y]","\t\t\t#new_array[@origin.x][@origin.y] = nil","\t\t\t#new_pos = Position.new(new_array, position.comp, position.human)","\t\t\treturn new_pos","\t\tend\t","","\t\tdef jumped_pods","\t\t\treturn @jumped_pods","\t\tend","\tend","","\t  # Copy a two-dimensional array","\t","end","","  def two_array_copy(a)","    new_a = Array.new(a.length)","   #  for i in  0 .. (a.length - 1)","   #    new_a[i] = a[0].dup","  \t# end","  \tnew_a = Marshal.load( Marshal.dump( a ) )","    return new_a","  end","","  # Freeze a two-dimensional array","  def two_array_freeze(a)","    for i in 0 .. (a.length - 1)","       a[i].freeze","   \tend","    a.freeze","  end"]},{"action":"insertText","range":{"start":{"row":0,"column":0},"end":{"row":0,"column":11}},"text":"module Octi"},{"action":"insertText","range":{"start":{"row":0,"column":11},"end":{"row":1,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":1,"column":0},"end":{"row":194,"column":0}},"lines":["\tclass Move","\t\tattr_reader :pod, :prongs, :board, :game_state, ","\t\t#attr_accessor :player","","\t\tdef initialize(origin, destination) #locations","\t\t\t@origin = origin","\t\t\t@destination = destination"," \t\tend","","\t\tdef execute_move(position)","\t\tend","","\tend","","\tclass Insert < Move","\t\tattr_reader :pod, :prongs, :inserts, :origin, :x, :y","\t\tdef initialize(pod,x,y,player)","\t\t\t@origin = pod #pod location","\t\t\t@x = x","\t\t\t@y = y","\t\t\t@player = player","\t\t\t#@new_prong_reserve = player.prong_reserve-1","\t\tend","","\t\tdef execute_move(position)","\t\t\tcount = @player.prong_reserve-1","\t\t\t","\t\t\tindex = @player.index","\t\t\t#puts \"player: #{@player.inspect}\"","\t\t\tif index == position.comp.index","\t\t\t\tnew_comp = Player.new(index, count)","\t\t\t\tnew_human = position.human","\t\t\t\tnew_comp.set_opponent_bases(position.comp.opponent_bases)","\t\t\telsif index == position.human.index","\t\t\t\tnew_comp = position.comp","\t\t\t\tnew_human = Player.new(index, count)","\t\t\t\tnew_human.set_opponent_bases(position.human.opponent_bases)","\t\t\telse","\t\t\t\tputs \"ERROR\".colorize(:yellow)","\t\t\tend","","\t\t\t#New pod array ","\t\t\t#new_array = position.pods.dup#DeepClone.clone position.pods","\t\t\tnew_array = two_array_copy(position.pods)","\t\t","\t\t\tpod = new_array[@origin.x][@origin.y]","\t\t\tnew_prongs = two_array_copy(pod.prongs)","","\t\t\tnew_prongs[@x][@y] = true ","\t\t\t#freeze","\t\t\ttwo_array_freeze(new_prongs)","\t\t\tnew_pod = Pod.new(@player)","\t\t\tnew_pod.set_prongs(new_prongs)","\t\t\tnew_array[@origin.x][@origin.y] = new_pod","\t\t\ttwo_array_freeze(new_array)","","\t\t\tnew_pos = Position.new(new_array, new_comp, new_human)","","\t\t\treturn new_pos\t\t\t\t\t","\t\tend","","\tend","","\tclass Hop < Move","\t\tattr_reader :pod, :prongs, :board, :origin, :destination, :player","\t\tdef initialize(origin, destination,player)","\t\t\t@origin = origin","\t\t\t@destination = destination","\t\t\t@player = player","\t\tend","","\t\tdef execute_move(position)","\t\t\tindex = @player.index","\t\t\tcount = @player.prong_reserve","\t\t\tif index == position.comp.index","\t\t\t\tnew_comp = Player.new(index, count)","\t\t\t\tnew_human = position.human","\t\t\t\tnew_comp.set_opponent_bases(position.comp.opponent_bases)","\t\t\telsif index == position.human.index","\t\t\t\tnew_comp = position.comp","\t\t\t\tnew_human = Player.new(index, count)","\t\t\t\tnew_human.set_opponent_bases(position.human.opponent_bases)","\t\t\telse","\t\t\t\tputs \"ERROR\".colorize(:yellow)","\t\t\tend","","\t\t\t#New pod array ","\t\t\t#new_array = position.pods.dup#DeepClone.clone position.pods","\t\t\tnew_array = two_array_copy(position.pods)","\t\t\tpod = new_array[@origin.x][@origin.y]","\t\t\tnew_prongs = two_array_copy(pod.prongs)","\t\t","\t\t\t#freeze pod","\t\t\tnew_pod = Pod.new(@player)","\t\t\tnew_array[@destination.x][@destination.y] = new_pod","\t\t\tnew_array[@origin.x][@origin.y] = nil","\t\t\ttwo_array_freeze(new_array)","","\t\t\t#freeze prongs","\t\t\ttwo_array_freeze(new_prongs)","\t\t\tnew_pod.set_prongs(new_prongs)","","\t\t\tnew_pos = Position.new(new_array, new_comp, new_human)","","\t\t\treturn new_pos","\t\tend\t","\tend","","\tclass Jump < Move","\t\tattr_reader :pod, :prongs, :board, :origin, :destination, :player, :jumped_pods","\t\tdef initialize(origin, destination, jumped_pods, player)","\t\t\t@origin = origin","\t\t\t@destination = destination","\t\t\t@jumped_pods = jumped_pods # locations of pods jumped in board position ","\t\t\t@player = player","\t\tend","\t\tdef set_captures(pods)","\t\t\t@jumped_pods = pods","\t\tend","\t\tdef execute_move(position)","\t\t\tindex = @player.index","","\t\t\tcount = @player.prong_reserve","\t\t\tif index == position.comp.index","\t\t\t\tnew_comp = Player.new(index, count)","\t\t\t\tnew_human = position.human","\t\t\t\tnew_comp.set_opponent_bases(position.comp.opponent_bases)","\t\t\telsif index == position.human.index","\t\t\t\tnew_comp = position.comp","\t\t\t\tnew_human = Player.new(index, count)","\t\t\t\tnew_human.set_opponent_bases(position.human.opponent_bases)","\t\t\telse","\t\t\t\tputs \"ERROR\".colorize(:yellow)","\t\t\tend","","\t\t\t#New pod array ","\t\t\t#new_array = position.pods.dup#DeepClone.clone position.pods","\t\t\tnew_array = two_array_copy(position.pods)","\t\t\tpod = new_array[@origin.x][@origin.y]","\t\t\tnew_prongs = two_array_copy(pod.prongs)","\t\t\t#freeze pod","\t\t\tnew_pod = Pod.new(@player)","\t\t\tnew_array[@destination.x][@destination.y] = new_pod","","\t\t\tnew_array[@origin.x][@origin.y] = nil","","\t\t\tadd_to_prong_reserve = 0","\t\t\tfor cap in jumped_pods","\t\t\t\tpod = new_array[cap.x][cap.y] ","\t\t\t\tadd_to_prong_reserve = add_to_prong_reserve + pod.prong_count","\t\t\t\tnew_array[cap.x][cap.y] = nil","\t\t\tend","\t\t\t#add to player's reserve","\t\t\t@player.set_prong_reserve(@player.prong_reserve+add_to_prong_reserve)","\t\t\ttwo_array_freeze(new_array)","","\t\t\t#freeze prongs","\t\t\ttwo_array_freeze(new_prongs)","\t\t\tnew_pod.set_prongs(new_prongs)","","\t\t\tnew_pos = Position.new(new_array, new_comp, new_human)","\t\t\t#start = @origin","\t\t\t#new_array = position.pods.dup#DeepClone.clone position.pods","\t\t\t#new_array[@destination.x][@destination.y] = new_array[@origin.x][@origin.y]","\t\t\t#new_array[@origin.x][@origin.y] = nil","\t\t\t#new_pos = Position.new(new_array, position.comp, position.human)","\t\t\treturn new_pos","\t\tend\t","","\t\tdef jumped_pods","\t\t\treturn @jumped_pods","\t\tend","\tend","","\t  # Copy a two-dimensional array","\t","end","","  def two_array_copy(a)","    new_a = Array.new(a.length)","   #  for i in  0 .. (a.length - 1)","   #    new_a[i] = a[0].dup","  \t# end","  \tnew_a = Marshal.load( Marshal.dump( a ) )","    return new_a","  end","","  # Freeze a two-dimensional array","  def two_array_freeze(a)","    for i in 0 .. (a.length - 1)","       a[i].freeze","   \tend","    a.freeze"]},{"action":"insertText","range":{"start":{"row":194,"column":0},"end":{"row":194,"column":5}},"text":"  end"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":147,"column":27},"end":{"row":148,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":148,"column":0},"end":{"row":148,"column":3}},"text":"\t\t\t"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":148,"column":3},"end":{"row":148,"column":4}},"text":"i"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":148,"column":4},"end":{"row":148,"column":5}},"text":"f"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":148,"column":5},"end":{"row":148,"column":6}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":148,"column":6},"end":{"row":148,"column":7}},"text":"j"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":148,"column":7},"end":{"row":148,"column":8}},"text":"u"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":148,"column":6},"end":{"row":148,"column":8}},"text":"ju"},{"action":"insertText","range":{"start":{"row":148,"column":6},"end":{"row":148,"column":17}},"text":"jumped_pods"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":148,"column":17},"end":{"row":148,"column":18}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":148,"column":18},"end":{"row":148,"column":19}},"text":">"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":148,"column":18},"end":{"row":148,"column":19}},"text":">"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":148,"column":17},"end":{"row":148,"column":18}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":148,"column":17},"end":{"row":148,"column":18}},"text":"."}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":148,"column":18},"end":{"row":148,"column":19}},"text":"e"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":148,"column":19},"end":{"row":148,"column":20}},"text":"m"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":148,"column":20},"end":{"row":148,"column":21}},"text":"p"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":148,"column":21},"end":{"row":148,"column":22}},"text":"t"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":148,"column":22},"end":{"row":148,"column":23}},"text":"y"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":148,"column":23},"end":{"row":148,"column":24}},"text":"?"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":148,"column":6},"end":{"row":148,"column":7}},"text":"!"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":149,"column":0},"end":{"row":149,"column":1}},"text":"\t"},{"action":"insertText","range":{"start":{"row":150,"column":0},"end":{"row":150,"column":1}},"text":"\t"},{"action":"insertText","range":{"start":{"row":151,"column":0},"end":{"row":151,"column":1}},"text":"\t"},{"action":"insertText","range":{"start":{"row":152,"column":0},"end":{"row":152,"column":1}},"text":"\t"},{"action":"insertText","range":{"start":{"row":153,"column":0},"end":{"row":153,"column":1}},"text":"\t"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":153,"column":7},"end":{"row":154,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":154,"column":0},"end":{"row":154,"column":4}},"text":"\t\t\t\t"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":154,"column":4},"end":{"row":154,"column":5}},"text":"e"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":154,"column":5},"end":{"row":154,"column":6}},"text":"n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":154,"column":6},"end":{"row":154,"column":7}},"text":"d"},{"action":"removeText","range":{"start":{"row":154,"column":3},"end":{"row":154,"column":4}},"text":"\t"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":148,"column":25},"end":{"row":149,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":149,"column":0},"end":{"row":149,"column":4}},"text":"\t\t\t\t"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":149,"column":4},"end":{"row":149,"column":5}},"text":"p"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":149,"column":5},"end":{"row":149,"column":6}},"text":"u"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":149,"column":6},"end":{"row":149,"column":7}},"text":"t"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":149,"column":7},"end":{"row":149,"column":8}},"text":"s"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":149,"column":8},"end":{"row":149,"column":9}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":149,"column":9},"end":{"row":149,"column":10}},"text":"j"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":149,"column":10},"end":{"row":149,"column":11}},"text":"u"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":149,"column":11},"end":{"row":149,"column":12}},"text":"m"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":149,"column":12},"end":{"row":149,"column":13}},"text":"p"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":149,"column":12},"end":{"row":149,"column":13}},"text":"p"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":149,"column":11},"end":{"row":149,"column":12}},"text":"m"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":149,"column":10},"end":{"row":149,"column":11}},"text":"u"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":149,"column":9},"end":{"row":149,"column":10}},"text":"j"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":149,"column":9},"end":{"row":149,"column":10}},"text":"\""}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":149,"column":10},"end":{"row":149,"column":11}},"text":"\""}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":149,"column":10},"end":{"row":149,"column":11}},"text":"j"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":149,"column":11},"end":{"row":149,"column":12}},"text":"u"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":149,"column":12},"end":{"row":149,"column":13}},"text":"m"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":149,"column":13},"end":{"row":149,"column":14}},"text":"p"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":149,"column":14},"end":{"row":149,"column":15}},"text":"e"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":149,"column":15},"end":{"row":149,"column":16}},"text":"d"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":149,"column":10},"end":{"row":149,"column":16}},"text":"jumped"},{"action":"insertText","range":{"start":{"row":149,"column":10},"end":{"row":149,"column":21}},"text":"jumped_pods"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":149,"column":21},"end":{"row":149,"column":22}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":149,"column":21},"end":{"row":149,"column":22}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":149,"column":21},"end":{"row":149,"column":22}},"text":":"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":149,"column":22},"end":{"row":149,"column":23}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":149,"column":23},"end":{"row":149,"column":24}},"text":"#"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":149,"column":24},"end":{"row":149,"column":25}},"text":"{"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":149,"column":25},"end":{"row":149,"column":26}},"text":"}"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":149,"column":25},"end":{"row":149,"column":26}},"text":"j"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":149,"column":26},"end":{"row":149,"column":27}},"text":"u"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":149,"column":27},"end":{"row":149,"column":28}},"text":"m"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":149,"column":28},"end":{"row":149,"column":29}},"text":"p"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":149,"column":29},"end":{"row":149,"column":30}},"text":"e"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":149,"column":30},"end":{"row":149,"column":31}},"text":"d"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":149,"column":25},"end":{"row":149,"column":31}},"text":"jumped"},{"action":"insertText","range":{"start":{"row":149,"column":25},"end":{"row":149,"column":36}},"text":"jumped_pods"}]}]]},"ace":{"folds":[],"scrolltop":1740,"scrollleft":0,"selection":{"start":{"row":149,"column":36},"end":{"row":149,"column":36},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":17,"state":"start","mode":"ace/mode/ruby"}},"timestamp":1407787282958,"hash":"925e63315b86d89d5901475ad430b90dc00b9296"}